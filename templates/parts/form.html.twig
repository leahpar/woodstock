{# Référence #}
{# vendor/symfony/twig-bridge/Resources/views/Form/form_div_layout.html.twig #}

{# Référence des noms des fragments #}
{# https://symfony.com/doc/current/form/form_themes.html#form-fragment-naming #}

{# Custom prototype #}
{# https://symfony.com/doc/current/form/form_themes.html#form-custom-prototype #}

{#-------------------- Widgets --------------------#}

{%- block form_widget -%}
    <!-- form_widget -->
    {% if compound %}
        {{- block('form_widget_compound') -}}
    {% else %}
        {{- block('form_widget_simple') -}}
    {% endif %}
{%- endblock form_widget -%}

{%- block form_widget_compound -%}
    <!-- form_widget_compound -->
    {%- set attr = attr | merge(widget_attr|default([]))  -%}
    {%- set attr = attr | default([]) | merge({class: (attr.class | default) ~ " formItemGroup"}) -%}
    <div {{ block('widget_container_attributes') }}>
        {%- if form is rootform -%}
            {{ form_errors(form) }}
        {%- endif -%}
        {{- block('form_rows') -}}
        {{- form_rest(form) -}}
    </div>
{%- endblock form_widget_compound -%}

{%- block choice_widget -%}
    <!-- choice_widget -->
    {% if expanded %}
        {{- block('choice_widget_expanded') -}}
    {% else %}
        {{- block('choice_widget_collapsed') -}}
    {% endif %}
{%- endblock choice_widget -%}

{%- block choice_widget_expanded -%}
    <!-- choice_widget_expanded -->
    <ul {{ block('widget_container_attributes') }}>
        {%- for child in form %}
            <li>
                {{- form_widget(child) -}}
                {%- set label_attr = label_attr|merge({'indiv': false }) -%}
                {{- form_label(child) -}}
            </li>
        {% endfor -%}
    </ul>
{%- endblock choice_widget_expanded -%}

{#-------------------- Collection --------------------#}

{%- block collection_widget -%}
    <!-- collection_widget -->
    {% if prototype is defined and not prototype.rendered %}
        {%- set attr = attr|merge({'data-prototype': form_row(prototype) }) -%}
    {% endif %}
    {%- set attr = attr|merge({'data-widget-counter': form.children|length }) -%}
    {{- block('form_widget') -}}
{%- endblock collection_widget -%}

{%- block collection_row -%}
    <!-- collection_row -->
    <div {% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
        {{- form_label(form) -}}
        {{- form_widget(form) -}}

        {% if not attr.readonly|default(false) %}
        <button type="button"
                class="add-collection-widget"
                data-list-selector="#{{ form.vars.id }}">+</button>
        {% endif %}
        {{- form_help(form) -}}
        {{- form_errors(form) -}}
    </div>
{%- endblock collection_row -%}

{#-------------------- Select --------------------#}

{%- block choice_widget_collapsed -%}
    <!-- choice_widget_collapsed -->
    {%- if required and placeholder is none and not placeholder_in_choices and not multiple and (attr.size is not defined or attr.size <= 1) -%}
        {% set required = false %}
    {%- endif -%}

    {#
        IMPORTANT :
        l'attribut "readonly" n'existe pas sur les selects !
        -> les selects simples deviennent des champs texte
        -> les selects select2 s'affichent correctement
        -> dans tous les cas on ajoute un champ caché ensuite pour que la validation form fonctionne (pas de champ manquant).
    #}
    {% set hidden_rendered = false %}

    <div>

        {% if attr.readonly|default(false) and (attr.class is not defined or 'select2' not in attr.class) %}

            {# Pour les selects simples (pas select2) en readonly, on affiche un champ texte readolny au lieu du select #}
            <div>
                {% set v = choices|selectLabel(value)|default(value) %}
                {%- with { type: 'text', value: v  } %}{{ block('form_widget_simple') }}{% endwith -%}
                {%- with { type: 'hidden', id: (id|default ~ "_hidden") } %}{{ block('form_widget_simple') }}{% endwith -%}
                {% set hidden_rendered = true %}
            </div>

        {% else %}

        <select {{ block('widget_attributes') }}{% if multiple %} multiple{% endif %}>
            {%- if placeholder is not none -%}
                <option value=""{% if value is empty %} selected{% endif %} disabled>{{ placeholder }}</option>
            {%- endif -%}
            {%- if preferred_choices|length > 0 -%}
                {% set options = preferred_choices %}
                {% set render_preferred_choices = true %}
                {{- block('choice_widget_options') -}}
                {%- if choices|length > 0 and separator is not none -%}
                    <option disabled>{{ separator }}</option>
                {%- endif -%}
            {%- endif -%}
            {%- set options = choices -%}
            {%- set render_preferred_choices = false -%}
            {{- block('choice_widget_options') -}}
        </select>

        {% endif %}

        {%- if attr.readonly|default(false) and not hidden_rendered -%}
            {# Champs hidden avec les valeurs parce que les selects readonly n'existent pas en fait #}
            {%- if multiple -%}
                    {% for v in value %}
                        {%- with { type: 'hidden', value: v, id: (id|default ~ "_hidden_" ~ loop.index0) } %}{{ block('form_widget_simple') }}{% endwith -%}
                    {% endfor %}
                {%- else -%}
                {%- with { type: 'hidden', id: (id|default ~ "_hidden") } %}{{ block('form_widget_simple') }}{% endwith -%}
            {%- endif -%}
        {%- endif -%}

    </div>

    {%- endblock choice_widget_collapsed -%}

{%- block choice_widget_options -%}
    <!-- choice_widget_options -->
    {% for group_label, choice in options %}
        {%- if choice is iterable -%}
            <optgroup label="{{ choice_translation_domain is same as(false) ? group_label : group_label|trans({}, choice_translation_domain) }}">
                {% set options = choice %}
                {{- block('choice_widget_options') -}}
            </optgroup>
        {%- else -%}
            <option value="{{ choice.value }}"
                    {%- if choice.attr %}{% with { attr: choice.attr } %}{{ block('attributes') }}{% endwith %}{% endif -%}
                    {%- if not render_preferred_choices|default(false) and choice is selectedchoice(value) %} selected{% endif -%}>
                {{- choice.label -}}
            </option>
        {%- endif -%}
    {% endfor %}
{%- endblock choice_widget_options -%}


{#-------------------- Trucs à cocher --------------------#}

{%- block checkbox_widget -%}
    <!-- checkbox_widget -->
    {% if errors|length > 0 -%}
        {# class 'error' pour les erreurs de formulaire #}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' error')|trim}) %}
    {% endif %}
    <input type="checkbox" {{- block('widget_attributes') -}}
                           {%- if value is defined %} value="{{ value }}"{% endif -%}
                           {# champs readonly non éditables #}
                           {%- if attr.readonly|default(false) %}disabled{% endif -%}
                           {%- if checked %} checked{% endif -%}>

{%- endblock checkbox_widget -%}

{%- block radio_widget -%}
    <!-- radio_widget -->
    {% if errors|length > 0 -%}
        {# class 'error' pour les erreurs de formulaire #}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' error')|trim}) %}
    {% endif -%}
    <input type="radio" {{- block('widget_attributes') -}}
                        {%- if value is defined %} value="{{ value }}"{% endif -%}
                        {%- if checked %} checked{% endif -%}
                        {%- if attr.readonly|default(false) %}disabled{% endif -%}>
{%- endblock radio_widget -%}


{#-------------------- Textarea --------------------#}

{%- block textarea_widget -%}
    <!-- textarea_widget -->
    {% if errors|length > 0 -%}
        {# class 'error' pour les erreurs de formulaire #}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' error')|trim}) %}
    {% endif %}
    <textarea {{ block('widget_attributes') }}>{{ value }}</textarea>
{%- endblock textarea_widget -%}

{#-------------------- Types simples --------------------#}

{# input de base #}
{%- block form_widget_simple -%}
    <!-- form_widget_simple -->
    {%- set type = type|default('text') -%}
    {% if errors|length > 0 -%}
        {# class 'error' pour les erreurs de formulaire #}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' error')|trim}) %}
    {% endif -%}
    <input type="{{ type }}"
            {{- block('widget_attributes') -}}
            {%- if value is not empty %}value="{{ value }}" {% endif -%}>
{%- endblock form_widget_simple -%}

{%- block text_widget -%}
    {%- set type = 'text' -%}
    <div>
    {{ block('form_widget_simple') }}
    </div>
{%- endblock text_widget -%}

{# input de base avec unité #}
{%- block unit_widget -%}
    {%- set type = type|default('text') -%}
    {%- set unit = unit|default('') -%}
    <div class="inputUnit">
    {{ block('form_widget_simple') }} <div class="unit">{{ unit|raw }}</div>
    </div>
{%- endblock unit_widget -%}

{%- block number_widget -%}
    {%- set type = 'number' -%}
    <div>
    {{ block('form_widget_simple') }}
    </div>
{%- endblock number_widget -%}

{%- block increment_widget -%}
    {%- set type = 'number' -%}
    <div class="inputNumber">
        {# Bouton d'incrément si pas readonly #}
        {% if not attr.readonly|default(false) %}
            <button data-inc="-1">-</button>
        {% endif %}

        {{ block('form_widget_simple') }}

        {# Bouton d'incrément si pas readonly #}
        {% if not attr.readonly|default(false) %}
            <button data-inc="1">+</button>
        {% endif %}
    </div>
{%- endblock increment_widget -%}

{%- block integer_widget -%}
    {%- set type = 'number' -%}
    <div>
    {{ block('form_widget_simple') }}
    </div>
{%- endblock integer_widget -%}

{%- block euro_widget -%}
    {%- set type = 'number' -%}
    {%- set unit = '&euro;' -%}
    {{ block('unit_widget') }}
{%- endblock euro_widget -%}

{%- block url_widget -%}
    {%- set type = 'url' -%}
    <div>
    {{ block('form_widget_simple') }}
    </div>
{%- endblock url_widget -%}

{%- block search_widget -%}
    {%- set type = 'search' -%}
    <div>
    {{ block('form_widget_simple') }}
    </div>
{%- endblock search_widget -%}

{%- block file_widget -%}
    {%- set type = 'file' -%}
    <div>
    {{ block('form_widget_simple') }}
    </div>
{%- endblock file_widget -%}

{%- block percent_widget -%}
    {%- set type = 'text' -%}
    {%- set unit = '&percnt;' -%}
    {{ block('unit_widget') }}
{%- endblock percent_widget -%}

{%- block password_widget -%}
    {%- set type = 'password' -%}
    <div>
    {{ block('form_widget_simple') }}
    </div>
{%- endblock password_widget -%}

{%- block hidden_widget -%}
    {%- set type = 'hidden' -%}
    {{ block('form_widget_simple') }}
{%- endblock hidden_widget -%}

{%- block email_widget -%}
    {%- set type = 'email' -%}
    <div>
    {{ block('form_widget_simple') }}
    </div>
{%- endblock email_widget -%}

{%- block range_widget -%}
    {% set type = 'range' %}
    <div>
    {{- block('form_widget_simple') -}}
    </div>
{%- endblock range_widget %}

{%- block tel_widget -%}
    {%- set type = 'tel' -%}
    <div>
    {{ block('form_widget_simple') }}
    </div>
{%- endblock tel_widget -%}

{%- block color_widget -%}
    {%- set type = 'color' -%}
    <div>
    {{ block('form_widget_simple') }}
    </div>
{%- endblock color_widget -%}


{#-------------------- Dates --------------------#}

{%- block datetime_widget -%}
    {%- set type = 'datetime-local' -%}
    <div>
    {{- block('form_widget_simple') -}}
    </div>
{%- endblock datetime_widget -%}

{%- block date_widget -%}
    {%- set type = 'date' -%}
    <div>
    {# Forçage de l'affichage sur le type date pour Safari qui ne gère pas le type date (Bouh!)  #}
    {% set attr = attr|merge({placeholder: 'aaaa-mm-jj'}) %}
    {% set attr = attr|merge({pattern: '[1-2][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]'}) %}
    {{- block('form_widget_simple') -}}
    </div>
{%- endblock date_widget -%}

{%- block time_widget -%}
    {%- set type = 'time' -%}
    <div>
    {{- block('form_widget_simple') -}}
    </div>
{%- endblock time_widget -%}


{#-------------------- Buttons --------------------#}

{%- block button_widget -%}
    <!-- button_widget -->

    {#{%- if attr.readonly|default(false) -%}#}
        {%- if label is empty -%}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {%- elseif label is not same as(false) -%}
                {% set label = name|humanize %}
            {%- endif -%}
        {%- endif -%}
        <button type="{{ type|default('button') }}" {{ block('button_attributes') }}>{{ translation_domain is same as(false) or label is same as(false) ? label : label|trans(label_translation_parameters, translation_domain) }}</button>
    {#{%- endif -%}#}
{%- endblock button_widget -%}

{%- block submit_widget -%}
    {%- set type = 'submit' -%}
    {{ block('button_widget') }}
{%- endblock submit_widget -%}

{%- block reset_widget -%}
    {%- set type = 'reset' -%}
    {{ block('button_widget') }}
{%- endblock reset_widget -%}


{#-------------------- Section --------------------#}

{%- block section_widget -%}
    <!-- section_widget -->
    <h4>{{ label }}</h4>
{%- endblock section_widget -%}

{%- block section_label -%}
    {# Rien à afficher ici #}
{%- endblock section_label -%}

{%- block adresse_label -%}
    {# Rien à afficher ici #}
{%- endblock adresse_label -%}

{#-------------------- Labels --------------------#}

{%- block form_label -%}
    <!-- form_label -->
    {% if label is not same as(false) -%}
        {%- if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        {%- if required -%}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {%- endif -%}
        {%- if label is empty -%}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {%- else -%}
                {% set label = name|humanize %}
            {%- endif -%}
        {%- endif -%}

        {%- if label_attr.indiv|default(false) is not same as(false) %}<div class="pts">{% endif %}
            <{{ element|default('label') }} {% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
            {{- label -}}
            </{{ element|default('label') }}>
        {%- if label_attr.indiv|default(false) is not same as(false) -%}</div>{%- endif -%}

    {%- endif -%}
{%- endblock form_label -%}

{%- block button_label -%}
    {# Rien à afficher ici #}
{%- endblock -%}


{#-------------------- Help --------------------#}

{% block form_help -%}
    <!-- form_help -->
    {%- if help is not empty -%}
        {%- set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ ' help-text')|trim}) -%}
        <p id="{{ id }}_help"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>
            {%- if help_html is same as(false) -%}
                {{- help -}}
            {%- else -%}
                {{- help|raw -}}
            {%- endif -%}
        </p>
    {%- endif -%}
{%- endblock form_help %}

{#-------------------- Rows --------------------#}

{%- block repeated_row -%}
    {#
    No need to render the errors here, as all errors are mapped
    to the first child (see RepeatedTypeValidatorExtension).
    #}
    {{- block('form_rows') -}}
{%- endblock repeated_row -%}

{%- block form_rows -%}
    <!-- form_rows -->
    {% for child in form|filter(child => not child.rendered) %}
        {{- form_row(child) -}}
    {% endfor %}
{%- endblock form_rows -%}

{%- block form_row -%}
    <!-- form_row -->
    {% if is_form|default(false) -%}
        {# On ajoute la classe "formContainer" si c'est un (sous) formulaire #}
        {#{%- set row_attr = row_attr|merge({ class: (row_attr.class|default('') ~ ' formContainer')|trim }) -%}#}
        {%- set row_attr = false -%}
    {% else %}
        {# On ajoute la classe "formItem" si c'est une ligne de formulaire #}
        {%- set row_attr = row_attr|merge({ class: (row_attr.class|default('') ~ ' formItem')|trim }) -%}
    {% endif %}
    {% if row_attr is not same as(false) %}<div {% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>{% endif %}
        {{- form_label(form) -}}
        {{- form_widget(form) -}}
        {{- form_help(form) -}}
        {{- form_errors(form) -}}
    {% if row_attr is not same as(false) %}</div>{% endif %}
{%- endblock form_row -%}

{%- block button_row -%}
    <!-- button_row -->
    <div {% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
        {{- form_widget(form) -}}
    </div>
{%- endblock button_row -%}

{%- block hidden_row -%}
    {# Champ caché, on n'affiche que le input hidden, rien d'autre #}
    {{ form_widget(form) }}
{%- endblock hidden_row -%}


{#-------------------- Erreurs --------------------#}

{%- block form_errors -%}
    <!-- form_errors -->
    {%- if errors|length > 0 -%}
        <ul class="errors">
            {%- for error in errors -%}
                <li>{{ error.message }}</li>
            {%- endfor -%}
        </ul>
    {%- endif -%}
{%- endblock form_errors -%}


{#-------------------- Gestion de la structure form --------------------#}

{%- block form -%}
    {{ form_start(form) }}
        {{- form_widget(form) -}}
    {{ form_end(form) }}
{%- endblock form -%}

{%- block form_start -%}
    {%- do form.setMethodRendered() -%}
    {% set method = method|upper %}
    {%- if method in ["GET", "POST"] -%}
        {% set form_method = method %}
    {%- else -%}
        {% set form_method = "POST" %}
    {%- endif -%}
    <div class="formWrapper">
    <form{% if name != '' %} name="{{ name }}"{% endif %} method="{{ form_method|lower }}"{% if action != '' %} action="{{ action }}"{% endif %}{{ block('attributes') }}{% if multipart %} enctype="multipart/form-data"{% endif %}>
    {%- if form_method != method -%}
        <input type="hidden" name="_method" value="{{ method }}" />
    {%- endif -%}
{%- endblock form_start -%}

{%- block form_end -%}
    {%- if not render_rest is defined or render_rest -%}
        {{ form_rest(form) }}
    {%- endif -%}
    </form>
    </div>
{%- endblock form_end -%}

{%- block form_rest -%}
    {% for child in form -%}
        {% if not child.rendered %}
            {{- form_row(child) -}}
        {% endif %}
    {%- endfor -%}

    {% if not form.methodRendered and form is rootform %}
        {%- do form.setMethodRendered() -%}
        {% set method = method|upper %}
        {%- if method in ["GET", "POST"] -%}
            {% set form_method = method %}
        {%- else -%}
            {% set form_method = "POST" %}
        {%- endif -%}

        {%- if form_method != method -%}
            <input type="hidden" name="_method" value="{{ method }}" />
        {%- endif -%}
    {% endif -%}
{% endblock form_rest %}


{#-------------------- Gestion des attributs --------------------#}

{%- block widget_attributes -%}
    id="{{ id }}"
    name="{{ full_name }}"
    {%- if disabled %} disabled {% endif -%}
    {%- if required %} required {% endif -%}
    {{ block('attributes') }}
{%- endblock widget_attributes -%}

{%- block widget_container_attributes -%}
    {%- if id is not empty %}id="{{ id }}"{% endif -%}
    {{ block('attributes') }}
{%- endblock widget_container_attributes -%}

{%- block button_attributes -%}
    id="{{ id }}"
    name="{{ full_name }}"
    {% if disabled %} disabled{% endif -%}
    {{ block('attributes') }}
{%- endblock button_attributes -%}

{% block attributes -%}
    {%- for attrname, attrvalue in attr -%}
        {{- " " -}}
        {%- if attrvalue is same as(true) -%}
            {{- attrname }}="{{ attrname }}"
        {%- elseif attrvalue is not same as(false) -%}
            {{- attrname }}="{{ attrvalue }}"
        {%- endif -%}
    {%- endfor -%}
{%- endblock attributes -%}
