<div class="mt-8 flow-root">
    <div class="-mx-4 -my-2 overflow-x-auto lg:overflow-visible sm:-mx-6 lg:-mx-8">
        <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
            <div class="relative">

                <table class="relative planning text-sm">

                    <thead>
                        <tr class="divide-gray-200 divide-x sticky z-10 top-0 bg-gray-100">
                            <th scope="col" class="!text-right font-normal w-1/6 px-3 py-1">Heures<br><span class="text-xs">Pass√©es / Planifi√©es</span></th>
                            {% for date in dates %}
                                <th scope="col" class="bg-white border-b border-gray-300 w-[14.3%]">
                                    {{ date|format_datetime(pattern="eeee dd/MM", locale="fr") }}
                                </th>
                            {% endfor %}
                        </tr>
                    </thead>

                    <tbody class="divide divide-gray-200 divide-y">
                    {% set precedente_equipe = '' %}
                    {% for poseur in poseurs %}
                        <tr class=" divide-gray-200 divide-x odd:bg-gray-600/5">
                            <td class="flex justify-between items-center gap-2 font-medium !text-gray-900 text-sm {% if poseur.equipe != precedente_equipe %}border-t border-gray-400{% endif %}">
                                <div>
                                    <span class="inline-block text-xs uppercase text-white rounded px-1 mr-1 {% if poseur.equipe == 'atelier' %}bg-sky-500{% else %}bg-teal-500{% endif %}">{{ poseur.equipe }}</span><br>{{ poseur }}
                                </div>
                                <div class="font-medium !text-gray-600 text-xs">
                                    <span title="{{ totalHeuresPasseesPoseurs[poseur.id] }}h pass√©e">{{ totalHeuresPasseesPoseurs[poseur.id] }}h</span>
                                    {{ totalHeuresPasseesPoseurs[poseur.id] > 39 ? '‚ö†Ô∏è' }}
                                    /
                                    <span title="{{ totalHeuresPlanifieesPoseurs[poseur.id] }}h planifi√©es">{{ totalHeuresPlanifieesPoseurs[poseur.id] }}h</span>
                                    {{ totalHeuresPlanifieesPoseurs[poseur.id] > 39 ? '‚ö†Ô∏è' }}
                                </div>
                            </td>
                            {% for d,date in dates %}
                                <td class="bg-white/70 {% if poseur.equipe != precedente_equipe %}!border-t !border-t-gray-400{% endif %}">
                                    <div class="w-full min-h-full flex flex-col gap-2 justify-start">
                                        {% for intervention in interventions[poseur.id][d]??[] %}
                                            <div class="group relative z-0 flex justify-between gap-2 bg-gray-100 border border-gray-200 text-gray-700 p-1 rounded transition-all  hover:text-white {% if intervention.type == 'atelier' %}hover:bg-sky-500 hover:border-sky-500{% elseif intervention.type == 'pose' %}hover:bg-teal-500 hover:border-teal-500{% else %}hover:bg-violet-500 hover:border-violet-500{% endif %}">
                                                <button class="showInterventionButton text-left"
                                                   data-disabled="{{ intervention.valide ? 1 : 0 }}"
                                                   data-intervention="{{ intervention.id }}">
                                                    {% if intervention.activite == 'chantier' %}
                                                        <span class="{% if intervention.type == 'atelier' %}text-sky-500{% elseif intervention.type == 'pose' %}text-teal-500{% else %}text-violet-500{% endif %} group-hover:text-white transition-all">{{ intervention.chantier }}
                                                        - {{ intervention.type }}</span>
                                                    {% else %}
                                                        <span class="{% if intervention.type == 'atelier' %}text-sky-500{% elseif intervention.type == 'pose' %}text-teal-500{% else %}text-violet-500{% endif %} group-hover:text-white transition-all">{{ intervention.activite }}</span>
                                                    {% endif %}
                                                    - {{ intervention.heuresPassees }}h&nbsp;/&nbsp;{{ intervention.heuresPlanifiees }}h
                                                    {% if intervention.heuresPassees != intervention.heuresPlanifiees %}
                                                        <span class="absolute -top-2 -right-2 w-5 h-5 flex justify-center items-center rounded-full bg-white text-xs border border-gray-200 {% if intervention.type == 'atelier' %}text-sky-500{% elseif intervention.type == 'pose' %}text-teal-500{% else %}text-violet-500{% endif %}">‚ö†Ô∏è</span>
                                                    {% endif %}
                                                </button>
                                                <input type="checkbox"
                                                       name="validerIntervention"
                                                       class="rounded"
                                                       {{ not is_granted('ROLE_PLANNING_EDIT') ? 'disabled'}}
                                                       data-intervention="{{ intervention.id }}"
                                                       {{ intervention.valide ? 'checked' }}>
                                            </div>
                                        {% endfor %}

                                        <button data-date="{{ date|format_datetime(pattern="yyyy-MM-dd") }}"
                                                data-disabled="{{ date.valide }}"
                                                data-poseur="{{ poseur.id }}"
                                                class="addInterventionButton rounded px-2 py-1 border border-dashed border-gray-200 text-gray-400 transition-all hover:border-gray-400 hover:text-teal-500">
                                            + Ajouter
                                        </button>
                                    </div>
                                </td>
                            {% endfor %}
                        </tr>
                        {% set precedente_equipe = poseur.equipe %}
                    {% endfor %}

                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>


<dialog onclick="event.target===this && this.close()" class="formWrapper w-full max-w-4xl rounded-3xl shadow-xl">
    {# planning/edit.html.twig #}
</dialog>

<script>
    const modal = document.querySelector('dialog');
    const addButtons = document.querySelectorAll('.addInterventionButton:not([data-disabled="true"])');
    const showButtons = document.querySelectorAll('.showInterventionButton');
    const validInputs = document.querySelectorAll('[name="validerIntervention"]');

    addButtons.forEach(button => {
        button.addEventListener('click', () => {
            const date = button.dataset.date;
            const poseur = button.dataset.poseur;
            fetch('{{ path('planning_new') }}' + '?date='+date+'&poseur='+poseur)
                .then(response => response.text())
                .then(html => modal.innerHTML = html)
                .then(() => modal.showModal())
                .then(() => toto())
        });
    });

    showButtons.forEach(button => {
        button.addEventListener('click', () => {
            let id = button.dataset.intervention;
            let disabled = button.dataset.disabled === '1' || button.dataset.disabled === 'true'; // ü§Æ JS
            fetch('{{ path('planning_edit', {id:'XX'}) }}'.replace('XX', id))
                .then(response => response.text())
                .then(html => modal.innerHTML = html)
                .then(() => modal.showModal())
                .then(() => toto())
                .then(() => {
                    if (disabled) {
                        modal.querySelector('form').querySelectorAll('input,select,textarea,button').forEach(input => input.disabled = true);
                        modal.querySelector('form').querySelectorAll('button').forEach(input => input.style.display = 'none');
                    }
                })
        });
    });

    validInputs.forEach(input => {
        input.addEventListener('change', () => {
            const id = input.dataset.intervention
            const form = new FormData()
            form.append('valider', input.checked)
            // change cursor to waiting
            document.body.style.cursor = 'wait'
            fetch('{{ path('planning_valider', {id:'XX'}) }}'.replace('XX', id), {method: 'POST', body: form})
                .then(() => {
                        const button = document.querySelector('.showInterventionButton[data-intervention="'+id+'"]')
                        button.dataset.disabled = input.checked
                        // change cursor back to normal
                        document.body.style.cursor = 'default'
                    })
        })
    })

    function toto() {
        const activite = modal.querySelector('#intervention_activite');
        const poseur = modal.querySelector('#intervention_poseur');
        const chantier = modal.querySelector('#intervention_chantier');
        const types = modal.querySelectorAll('[name="intervention[type]"]');
        chantier.tomselect.on ('change', () => chantier.tomselect.blur());
        poseur.tomselect.on ('change', () => poseur.tomselect.blur());
        activite.addEventListener('change', function () {
            if (activite.value === 'chantier') {
                chantier.disabled = false;
                types.forEach(type => {
                    type.disabled = false;
                    type.required = true;
                });
            } else {
                chantier.tomselect.clear();
                chantier.disabled = true;
                types.forEach(type => {
                    type.checked = false;
                    type.disabled = true;
                    type.required = false;
                });
            }
        });
        activite.dispatchEvent(new Event('change'));
    }
</script>
